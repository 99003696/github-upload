//microcontroller header
#include <stdint.h>

//Defining Memory Base Address

#define SRAM1_BASE_ADDR 0x20000000U
#define SRAM2_BASE_ADDR 0x2001C000U
#define FLASH_BASE_ADDR 0x08000000U
#define ROM_BASE_ADDR

// Defining Peripheral Base Address

#define APB1_BASE_ADDR 0x40000000U
#define APB2_BASE_ADDR 0x40007C00U
#define AHB1_BASE_ADDR 0x40020000U

// Defining Peripherals that are hanging onto the AHB1 Bus

#define GPIOA_BASE_ADDR (AHB1_BASE_ADDR + 0x0000)   //0X40020000
#define GPIOB_BASE_ADDR (AHB1_BASE_ADDR + 0x0400)
#define GPIOC_BASE_ADDR (AHB1_BASE_ADDR + 0x0800)
#define GPIOD_BASE_ADDR (AHB1_BASE_ADDR + 0x0C00)
#define GPIOE_BASE_ADDR (AHB1_BASE_ADDR + 0x1000)
#define GPIOF_BASE_ADDR (AHB1_BASE_ADDR + 0x1400)
#define GPIOG_BASE_ADDR (AHB1_BASE_ADDR + 0x1800)
#define GPIOH_BASE_ADDR (AHB1_BASE_ADDR + 0x1C00)
#define GPIOI_BASE_ADDR (AHB1_BASE_ADDR + 0x2000)
#define GPIOJ_BASE_ADDR (AHB1_BASE_ADDR + 0x2400)
#define GPIOK_BASE_ADDR (AHB1_BASE_ADDR + 0x2800)
#define CRC_BASE_ADDR (AHB1_BASE_ADDR + 0x3000)
#define RCC_BASE_ADDR (AHB1_BASE_ADDR + 0x3800)
#define FLASHIR_BASE_ADDR (AHB1_BASE_ADDR + 0x3C00)
#define BKPSRAM_BASE_ADDR (AHB1_BASE_ADDR + 0x4000)
#define DMA1_BASE_ADDR (AHB1_BASE_ADDR + 0x6000)
#define DMA2_BASE_ADDR (AHB1_BASE_ADDR + 0x6400)
#define ETHERNET_MAC_BASE_ADDR (AHB1_BASE_ADDR + 0x8000)
#define DMA2D_BASE_ADDR (AHB1_BASE_ADDR + 0xB000)
#define USB_OTG_HS_BASE_ADDR 0X40040000U

// Defining Peripherals that are hanging onto the APB1 Bus

#define TIM2_BASE_ADDR (APB1_BASE_ADDR + 0x0000)
#define TIM3_BASE_ADDR (APB1_BASE_ADDR + 0x0400)
#define TIM4_BASE_ADDR (APB1_BASE_ADDR + 0x0800)
#define TIM5_BASE_ADDR (APB1_BASE_ADDR + 0x0C00)
#define TIM6_BASE_ADDR (APB1_BASE_ADDR + 0x1000)
#define TIM7_BASE_ADDR (APB1_BASE_ADDR + 0x1400)
#define TIM12_BASE_ADDR (APB1_BASE_ADDR + 0x1800)
#define TIM13_BASE_ADDR (APB1_BASE_ADDR + 0x1C00)
#define TIM14_BASE_ADDR (APB1_BASE_ADDR + 0x2000)
#define RTC_BKP_BASE_ADDR (APB1_BASE_ADDR + 0x2800)
#define WWDG_BASE_ADDR (APB1_BASE_ADDR + 0x2C00)
#define IWDG_BASE_ADDR (APB1_BASE_ADDR + 0x3000)
#define I2S2ext_BASE_ADDR (APB1_BASE_ADDR + 0x3400)
#define SPI2_I2S2_BASE_ADDR (APB1_BASE_ADDR + 0x3800)
#define SPI3_I2S3_BASE_ADDR (APB1_BASE_ADDR + 0x3C00)
#define I2S3ext_BASE_ADDR (APB1_BASE_ADDR + 0x4000)
#define USART2_BASE_ADDR (APB1_BASE_ADDR + 0x4400)
#define USART3_BASE_ADDR (APB1_BASE_ADDR + 0x4800)
#define UART4_BASE_ADDR (APB1_BASE_ADDR + 0x4C00)
#define UART5_BASE_ADDR (APB1_BASE_ADDR + 0x5000)
#define I2C1_BASE_ADDR (APB1_BASE_ADDR + 0x5400)
#define I2C2_BASE_ADDR (APB1_BASE_ADDR + 0x5800)
#define I2C3_BASE_ADDR (APB1_BASE_ADDR + 0x5C00)
#define CAN1_BASE_ADDR (APB1_BASE_ADDR + 0x6400)
#define CAN2_BASE_ADDR (APB1_BASE_ADDR + 0x6800)
#define PWR_BASE_ADDR (APB1_BASE_ADDR + 0x7000)
#define DAC_BASE_ADDR (APB1_BASE_ADDR + 0x7400)
#define UART7_BASE_ADDR (APB1_BASE_ADDR + 0x7800)
#define UART8_BASE_ADDR (APB1_BASE_ADDR + 0x7C00)

// Defining Peripherals that are hanging onto the APB2 Bus

#define TIM1_BASE_ADDR (APB2_BASE_ADDR + 0x0000)
#define TIM8_BASE_ADDR (APB2_BASE_ADDR + 0x0400)
#define USART1_BASE_ADDR (APB2_BASE_ADDR + 0x1000)
#define USART6_BASE_ADDR (APB2_BASE_ADDR + 0x1400)
#define ADC1_2_3_BASE_ADDR (APB2_BASE_ADDR + 0x2000)
#define SDIO_BASE_ADDR (APB2_BASE_ADDR + 0x2C00)
#define SPI1_BASE_ADDR (APB2_BASE_ADDR + 0x3000)
#define SPI4_BASE_ADDR (APB2_BASE_ADDR + 0x3400)
#define SYSCFG_BASE_ADDR (APB2_BASE_ADDR + 0x3800)
#define EXTI_BASE_ADDR (APB2_BASE_ADDR + 0x3C00)
#define TIM9_BASE_ADDR (APB2_BASE_ADDR + 0x4000)
#define TIM10_BASE_ADDR (APB2_BASE_ADDR + 0x4400)
#define TIM11_BASE_ADDR (APB2_BASE_ADDR + 0x4800)
#define SPI5_BASE_ADDR (APB2_BASE_ADDR + 0x5000)
#define SPI6_BASE_ADDR (APB2_BASE_ADDR + 0x5400)
#define SAI1_BASE_ADDR (APB2_BASE_ADDR + 0x5800)
#define LCD_TFT_BASE_ADDR (APB2_BASE_ADDR + 0x6800)

//defining the structure for the registers
#define __vo volatile

typedef struct
{
	__vo uint32_t MODER;
	__vo uint32_t OTYPER;
	__vo uint32_t OSPEEDR;
	__vo uint32_t PUPDR;
	__vo uint32_t IDR;
	__vo uint32_t ODR;
	__vo uint32_t BSRR;
	__vo uint32_t LCKR;
	__vo uint32_t AFR[2];
}Gpio_RegDef_t;  //GPIOE

#define GPIOA ((Gpio_RegDef_t*)GPIOA_BASE_ADDR)
#define GPIOB ((Gpio_RegDef_t*)GPIOB_BASE_ADDR)
#define GPIOC ((Gpio_RegDef_t*)GPIOC_BASE_ADDR)
#define GPIOD ((Gpio_RegDef_t*)GPIOD_BASE_ADDR)
#define GPIOE ((Gpio_RegDef_t*)GPIOE_BASE_ADDR)
#define GPIOF ((Gpio_RegDef_t*)GPIOF_BASE_ADDR)
#define GPIOG ((Gpio_RegDef_t*)GPIOG_BASE_ADDR)
#define GPIOH ((Gpio_RegDef_t*)GPIOH_BASE_ADDR)
#define GPIOI ((Gpio_RegDef_t*)GPIOI_BASE_ADDR)
#define GPIOJ ((Gpio_RegDef_t*)GPIOJ_BASE_ADDR)
#define GPIOK ((Gpio_RegDef_t*)GPIOK_BASE_ADDR)

typedef struct
{
	__vo uint32_t CR;
	__vo uint32_t PLLCFGR;
	__vo uint32_t CFGR;
	__vo uint32_t CIR;
	__vo uint32_t AHB1RSTR;
	__vo uint32_t AHB2RSTR;
	__vo uint32_t AHB3RSTR;
	__vo uint32_t APB1RSTR;
	__vo uint32_t APB2RSTR;
	__vo uint32_t AHB1ENR;
	__vo uint32_t AHB2ENR;
	__vo uint32_t AHB3ENR;
	__vo uint32_t APB1ENR;
	__vo uint32_t APB2ENR;
	__vo uint32_t AHB1LPENR;
	__vo uint32_t AHB2L1PENR;
	__vo uint32_t AHB3LPENR;
	__vo uint32_t APB1LPENR;
	__vo uint32_t APB2LPENR;
	__vo uint32_t BDCR;
	__vo uint32_t CSR;
	__vo uint32_t SSCGR;
	__vo uint32_t PLLI2SCFGR;
}Rcc_RegDef_t;

#define RCC ((Rcc_RegDef_t*)RCC_BASE_ADDR)

//Peripheral Clock Enable

#define GPIOA_PCLK_EN()    (RCC->AHB1ENR |= (1<<0))
#define GPIOB_PCLK_EN()    (RCC->AHB1ENR |= (1<<1))
#define GPIOC_PCLK_EN()    (RCC->AHB1ENR |= (1<<2))
#define GPIOD_PCLK_EN()    (RCC->AHB1ENR |= (1<<3))
#define GPIOE_PCLK_EN()    (RCC->AHB1ENR |= (1<<4))

//Peripheral Clock Disable

#define GPIOA_PCLK_DIS()    (TODO)
#define GPIOB_PCLK_DIS()    (TODO)
#define GPIOC_PCLK_DIS()    (TODO)
#define GPIOD_PCLK_DIS()    (TODO)
#define GPIOE_PCLK_DIS()    (TODO)

#include "gpio_driver.h"




































